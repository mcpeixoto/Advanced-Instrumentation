

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                                           Tue Dec 13 14:58:46 2022


     1                           	processor	18F47Q10
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata_bank6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	udata_bank7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    13                           	psect	udata_bank8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    14                           	psect	udata_bank9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    15                           	psect	udata_bank10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    16                           	psect	udata_bank11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    17                           	psect	udata_bank12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    18                           	psect	udata_bank14,global,class=BANK14,space=1,delta=1,lowdata,noexec
    19                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    20                           	psect	code,global,reloc=2,class=CODE,delta=1
    21                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    22                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    23                           	psect	intcode,global,delta=1
    24   000000                     
    25                           	psect	edata
    26   000000                     stk_offset	set	0
    27   000000                     auto_size	set	0
    28                           
    29                           ; stack_auto defines a symbol /name/_offset which equates to the
    30                           ; stack offset of the auto object in question
    31   000000                     
    32                           ; stack_param defines a symbol /name/_offset which equates to the
    33                           ; stack offset of the parameter object in question
    34   000000                     
    35                           ; alloc_stack adjusts the SP to allocate space for auto objects
    36                           ; it also links in to the btemp symbol so that can be used
    37   000000                     
    38                           ; restore_stack adjusts the SP to remove all auto and parameter
    39                           ; objects from the stack prior to returning from a function
    40   000000                     
    41                           	psect	intcode
    42   000008                     _int_handler:
    43                           	callstack 0
    44                           
    45                           ;when an interrupt happens, this function is called. It is your job to verify what interrupt happene
      +                          d and act accordingly
    46   000008  010E               	banksel	3781
    47   00000A  BBC5               	btfsc	3781,5,b	; Q:check if the timer0 interrupt flag is set. If so, go to timer0_int_handler. If n
      +                          ot, skip.
    48   00000C  D009               	goto	_timer0_int_handler
    49   00000E  010E               	banksel	3782
    50   000010  B1C6               	btfsc	3782,0,b	;Q: check if the ADC interrupt flag is set. If so, go to adc_int_handler. If not, sk
      +                          ip.
    51   000012  0010               	retfie	
    52                           
    53                           ; Clear bit 1 of RC1STA register BUG FIX RECEIVING
    54   000014  929C               	bcf	3996,1,c
    55   000016  010E               	banksel	3784
    56   000018  BBC8               	btfsc	3784,5,b	;Q: check if the EUSART1 RX flag is set. If so, go to the C function _getch. If not,
      +                           skip.
    57   00001A  EC92  F008         	call	_add_to_receiv_buff
    58   00001E  0010               	retfie	
    59   000020                     _timer0_int_handler:
    60   000020  010F               	banksel	3980
    61   000022  7A8C               	btg	3980,5,c	;TOGGLE LED ON PORTA,5
    62   000024  010E               	banksel	3781
    63   000026  9BC5               	bcf	3781,5,b	;clear timer_int flag
    64   000028  0010               	retfie		;return from interruption
    65                           tosu	equ	0xFFF
    66                           tosh	equ	0xFFE
    67                           tosl	equ	0xFFD
    68                           stkptr	equ	0xFFC
    69                           pclatu	equ	0xFFB
    70                           pclath	equ	0xFFA
    71                           pcl	equ	0xFF9
    72                           tblptru	equ	0xFF8
    73                           tblptrh	equ	0xFF7
    74                           tblptrl	equ	0xFF6
    75                           tablat	equ	0xFF5
    76                           prodh	equ	0xFF4
    77                           prodl	equ	0xFF3
    78                           indf0	equ	0xFEF
    79                           postinc0	equ	0xFEE
    80                           postdec0	equ	0xFED
    81                           preinc0	equ	0xFEC
    82                           plusw0	equ	0xFEB
    83                           fsr0h	equ	0xFEA
    84                           fsr0l	equ	0xFE9
    85                           wreg	equ	0xFE8
    86                           indf1	equ	0xFE7
    87                           postinc1	equ	0xFE6
    88                           postdec1	equ	0xFE5
    89                           preinc1	equ	0xFE4
    90                           plusw1	equ	0xFE3
    91                           fsr1h	equ	0xFE2
    92                           fsr1l	equ	0xFE1
    93                           bsr	equ	0xFE0
    94                           indf2	equ	0xFDF
    95                           postinc2	equ	0xFDE
    96                           postdec2	equ	0xFDD
    97                           preinc2	equ	0xFDC
    98                           plusw2	equ	0xFDB
    99                           fsr2h	equ	0xFDA
   100                           fsr2l	equ	0xFD9
   101                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                               Tue Dec 13 14:58:46 2022

                           PIR0 000EC5                             PIR1 000EC6                             PIR3 000EC8  
                          PORTA 000F8C                           RC1STA 000F9C              _add_to_receiv_buff 1124  
                        isa$std 000001              _timer0_int_handler 0020                     _int_handler 0008  
                      isa$xinst 000000  
